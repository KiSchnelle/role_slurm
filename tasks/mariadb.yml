---
# 1=compute, 2=database, 3=controller, 4=first controller, 5=all
- name: Install mariaDB on CentOS 7.
  ansible.builtin.yum:
    name:
      - "mariadb-server"
      - "mariadb-devel"
      - "MySQL-python"
    state: present
    update_cache: true
  when: ansible_distribution|lower == 'centos' and ansible_distribution_major_version is version_compare('7', '==') and database_server == true


- name: Install mariaDB on CentOS 8.
  block:
    - name: Install mariaDB on CentOS 8.
      ansible.builtin.yum:
        name:
          - "mariadb-server"
          - "mariadb-devel"
        state: present
        update_cache: true
    
    - name: Install python3-mysql for CentOS 8.
      ansible.builtin.dnf:
        name: "python3-mysql"
        state: present
        update_cache: true
  when: ansible_distribution|lower == 'centos' and ansible_distribution_major_version is version_compare('8', '==') and database_server == true


- name: Install mariaDB on Ubuntu 20.
  ansible.builtin.apt:
    name:
      - "mariadb-server"
      - "libmariadbclient-dev"
      - "libmariadb-dev"
      - "python3-mysqldb"
    state: present
    update_cache: true
  when: ansible_distribution|lower == 'ubuntu' and ansible_distribution_major_version is version_compare('20', '==') and database_server == true


- name: Start and enable mariaDB.
  ansible.builtin.systemd:
    name: mariadb
    state: started
    enabled: true
  when: database_server == true


- name: Check if root password is set
  shell: >
    mysqladmin -u root status
  changed_when: false
  failed_when: false
  register: root_pwd_check
  when: database_server == true


- name: Set MariaDB root password for the first time
  community.mysql.mysql_user:
    name: root
    password: "{{ mariadb_root_password }}"
    host_all: yes
    state: present
  when: root_pwd_check.rc == 0 and database_server == true


- name: Create database for slurm.
  community.mysql.mysql_db:
    name: slurm_acct_db
    state: present
    login_user: root
    login_password: "{{ mariadb_root_password }}"
  when: database_server == true


- name: Create slurm database user.
  community.mysql.mysql_user:
    name: slurm
    state: present
    password: "{{ mariadb_slurm_password }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
  when: database_server == true


- name: Secure slurm database user access to database.
  community.mysql.mysql_user:
    name: slurm
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    priv: "slurm_acct_db.*:ALL"
    state: present
  when: database_server == true